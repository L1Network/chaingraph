generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model actions {
  chain               String
  transaction_id      String
  contract            String
  action              String
  data                Json
  authorization       Json
  global_sequence     String
  action_ordinal      Int
  account_ram_deltas  Json?
  receipt             Json?
  context_free        Boolean?
  account_disk_deltas Json?
  console             String?
  receiver            String?
  transactions        transactions @relation(fields: [chain, transaction_id], references: [chain, transaction_id], onUpdate: Restrict)

  @@id([chain, global_sequence])
}

model api_users {
  account      String
  api_key      String    @unique
  domain_names String?
  id           Int       @id @default(autoincrement())
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
}

model blocks {
  chain        String
  block_num    Int
  block_id     String?        @unique
  timestamp    DateTime       @db.Timestamptz(6)
  producer     String
  chains       chains         @relation(fields: [chain], references: [chain_name], onUpdate: Restrict)
  transactions transactions[]

  @@id([chain, block_num])
}

model chains {
  chain_name   String       @id
  chain_id     String
  rpc_endpoint String
  blocks       blocks[]
  table_rows   table_rows[]
}

model table_rows {
  chain       String
  contract    String
  table       String
  scope       String
  primary_key String
  data        Json
  chains      chains @relation(fields: [chain], references: [chain_name], onUpdate: Restrict, map: "table_rows_chain_name_fkey")

  @@id([chain, contract, table, scope, primary_key], map: "tables_pkey")
}

model transactions {
  chain           String
  transaction_id  String
  block_num       Int
  cpu_usage_us    Int?
  net_usage_words Int?      @default(0)
  net_usage       Int?      @default(0)
  blocks          blocks    @relation(fields: [chain, block_num], references: [chain, block_num], onUpdate: Restrict)
  actions         actions[]

  @@id([transaction_id, chain])
}

model mappings {
  contract_name String    @id
  mappings      Json      @default(dbgenerated("jsonb_build_object()"))
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  contract_type String?
}
