services:
  db:
    image: postgres:15
    container_name: chaingraph-postgres
    restart: always
    ports:
      - "5432:5432"
    volumes: 
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  hasura:
    image: hasura/graphql-engine:v2.46.0
    container_name: chaingraph-hasura
    restart: always
    ports:
      - "3333:8080"
    environment:
      ## Postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      ## Data source connection string
      PG_DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      ## Enable Hasura console
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## Enable debugging mode (disable in production)
      HASURA_GRAPHQL_DEV_MODE: "true"
      ## Log types
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## Uncomment to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_ENABLED_APIS: graphql, metadata
      HASURA_GRAPHQL_MIGRATIONS_DIR: /migrations
      HASURA_GRAPHQL_METADATA_DIR: /metadata
    volumes:
      - ../apps/hasura/migrations:/migrations
      - ../apps/hasura/metadata:/metadata
    depends_on:
      data-connector-agent:
        condition: service_healthy

  data-connector-agent:
    image: hasura/graphql-data-connector:v2.46.0
    container_name: chaingraph-connector
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

volumes:
  pg_data:

    